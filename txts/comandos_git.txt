---------- Clonar Repositorio por HTTPS ----------
git clone https://github.com/jrafael8a/py_start.git



---------- Clonar Repositorio por SSH ----------
git@github.com:jrafael8a/py_start.git



---------- Status ----------
git status



---------- Subir Todo ----------
git add .
git commit -m "Comentario del commit"
git push



---------- Descargar Todo ----------
git pull



---------- Volver a descargar un archivo ignorando los cambios locales ----------
git checkout -- <archivo>

# Si por alguna razon quiero descartar los cambios en un archivo local 
# y descargarlo nuevamente desde el Repositorio.
# Si quiero hacerlo para todos los archivos entonces se usa

git checkout -- .


---------- Renmobrar Archivos  ----------
git mv <archivo_origen> <archivo_destino>
Esto mueve o renombra el archivo y lo aÃ±ade automÃ¡ticamente al Ã¡rea de staging.





---------- . ----------
ðŸ”¹ ConfiguraciÃ³n de Git
COMANDO	                                        DESCRIPCIÃ“N
git config --global user.name "Tu Nombre"	    Configura tu nombre en Git.
git config --global user.email "tu@email.com"	Configura tu correo en Git.
git config --global core.editor "vim"	        Configura el editor de texto predeterminado.
git config --global color.ui auto	            Activa los colores en la terminal.
git config --list	                            Muestra la configuraciÃ³n actual de Git.


ðŸ”¹ InicializaciÃ³n y ClonaciÃ³n
COMANDO	                            DESCRIPCIÃ“N
git init	                        Inicializa un nuevo repositorio Git en el directorio actual.
git clone <URL>	                    Clona un repositorio remoto en tu mÃ¡quina local.
git clone <URL> <nombre_carpeta>	Clona el repositorio en una carpeta especÃ­fica.


ðŸ”¹ GestiÃ³n de Estados (AÃ±adir, Confirmar, Ver Cambios)
COMANDO	                            DESCRIPCIÃ“N
git status	                        Muestra el estado actual del repositorio.
git add <archivo>	                AÃ±ade un archivo al Ã¡rea de staging (preparado para commit).
git add .	                        AÃ±ade todos los archivos modificados al Ã¡rea de staging.
git commit -m "Mensaje"	            Crea un nuevo commit con los cambios en staging.
git commit -am "Mensaje"	        AÃ±ade y hace commit de los archivos ya versionados (sin git add).
git diff	                        Muestra las diferencias entre el directorio de trabajo y el Ãºltimo commit.
git diff --staged	                Muestra las diferencias de los archivos en staging.
git log	                            Muestra el historial de commits.
git log --oneline	                Muestra el historial en una lÃ­nea por commit.


ðŸ”¹ Deshacer Cambios
COMANDO	                            DESCRIPCIÃ“N
git checkout -- <archivo>	        Revierte los cambios de un archivo al Ãºltimo commit.
git restore <archivo>	            Alternativa a checkout en versiones recientes.
git reset HEAD <archivo>	        Quita el archivo del Ã¡rea de staging.
git reset --soft HEAD~1	            Deshace el Ãºltimo commit pero mantiene los cambios en staging.
git reset --mixed HEAD~1	        Deshace el Ãºltimo commit y mueve los cambios al directorio de trabajo.
git reset --hard HEAD~1	            Deshace el Ãºltimo commit y borra completamente los cambios locales. âš  Irreversible.
git revert <commit>	                Crea un nuevo commit que revierte los cambios del commit especificado.


ðŸ”¹ Trabajo con Ramas
COMANDO	                                        DESCRIPCIÃ“N
git branch	                                    Lista todas las ramas locales.
git branch <nombre_rama>	                    Crea una nueva rama.
git checkout <nombre_rama>	                    Cambia a otra rama.
git checkout -b <nombre_rama>	                Crea una nueva rama y cambia a ella.
git switch <nombre_rama>	                    Alternativa moderna a checkout para cambiar de rama.
git push origin <nombre_rama>                   Sube la rama al repositorio remoto.
git push --set-upstream origin <nombre_rama>    Enlaza la rama local con la rama remota.

git switch main                                 Volvemos a la rama main
git merge <nombre_rama>	                        Fusiona una rama <nombre_rama> en la rama actual (main por ejemplo).
git branch -d <nombre_rama>	                    Elimina una rama local.
git branch -D <nombre_rama>	                    Fuerza la eliminaciÃ³n de una rama local.
git push origin --delete <nombre_rama>	        Elimina una rama en el repositorio remoto.

git config --global push.autoSetupRemote true   Cada vez que se haga push desde una nueva rama, la sube y la enlaza.

Cuando se crea una nueva rama, aunque se suba al remoto con git push origin <nombre_rama>
estas ramas no quedan enlazadas, entonces si se quiere hacer simplemente    git push    dara error
para enlazarlas automaticamente se puede configurar el parametro local 
git config --global push.autoSetupRemote true


ðŸ”¹ SincronizaciÃ³n con Remoto
COMANDO	                            DESCRIPCIÃ“N
git remote -v	                    Muestra los repositorios remotos vinculados.
git remote add origin <URL>	        Vincula un repositorio remoto a tu repositorio local.
git fetch origin	                Descarga los cambios remotos sin fusionarlos.
git pull origin <rama>	            Descarga y fusiona los cambios remotos en la rama actual.
git push origin <rama>	            Sube los cambios de la rama actual al repositorio remoto.
git push --force origin <rama>	    Fuerza el push (âš  puede sobrescribir cambios remotos!).


ðŸ”¹ Trabajo con Stash    (Guardado Temporal de Cambios)
COMANDO	                            DESCRIPCIÃ“N
git stash	                        Guarda los cambios locales sin commit en una "pila".
git stash list	                    Muestra la lista de cambios guardados con stash.
git stash pop	                    Restaura el Ãºltimo stash y lo elimina de la lista.
git stash apply	                    Aplica el Ãºltimo stash pero no lo elimina.
git stash drop	                    Elimina el Ãºltimo stash.

ðŸ”¹ Trabajo con Tags     (Etiquetas de Versiones)
COMANDO 	                        DESCRIPCIÃ“N
git tag	                            Lista todas las etiquetas (tags).
git tag -a v1.0 -m "VersiÃ³n 1.0"	Crea una etiqueta anotada.
git tag v1.0	                    Crea una etiqueta ligera.
git push origin --tags	            Sube todas las etiquetas al repositorio remoto.
git tag -d v1.0	                    Elimina una etiqueta localmente.
git push origin :refs/tags/v1.0	    Elimina una etiqueta en el repositorio remoto.


ðŸ”¹ InvestigaciÃ³n y DiagnÃ³stico
COMANDO	                            DESCRIPCIÃ“N
git blame <archivo>	                Muestra quiÃ©n modificÃ³ cada lÃ­nea de un archivo.
git reflog	                        Muestra el historial de movimientos en el repositorio.
git fsck	                        Verifica la integridad del repositorio.


ðŸ”¹ Otros COMANDOs Ãštiles
COMANDO	                            DESCRIPCIÃ“N
git show <commit>	                Muestra detalles de un commit.
git shortlog -sn	                Muestra los contribuyentes y la cantidad de commits.
git gc	                            Optimiza el repositorio.



ðŸ”¹ Ejemplo de Flujo de Trabajo TÃ­pico en Git
1 - Clonar un repositorio:
git clone <URL>

2 - Crear y cambiar a una nueva rama:
git checkout -b nueva-rama

3 - Hacer cambios y confirmarlos:
git add .
git commit -m "Agregado nuevo cÃ³digo"

4 - Subir cambios al repositorio remoto:
git push origin nueva-rama

5 - Fusionar la rama en main:
git checkout main
git merge nueva-rama
git push origin main



------------------ Comandos Personalizados --------------------------------

En git tambien se pueden agregar comandos personalizados al archivo .gitconfig en la raiz de la carpeta del usuario C:\Users\Usuario\.gitconfig
o con el editor de texto   nano   de la terminal bash de git:

nano ~/.gitconfig

agregamos nuestro(s) alias:

[alias]
    eliminar-dir-vacios = "!find . -type d -empty -not -path './.git/*' -not -path './.git' -delete"
	ver-dir-vacios = "!find . -type d -empty -not -path './.git/*' -not -path './.git'"

y ahora al escribir    git eliminar-dir-vacios    se eliminaran todos los directorios vacios

